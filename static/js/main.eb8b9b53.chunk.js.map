{"version":3,"sources":["Crib.js","Hand.js","App.js","index.js"],"names":["Crib","_this","this","deck_id","props","getCib","console","log","code","card","image","react_default","a","createElement","onClick","getCrib","src","heigh","width","Component","Hand","getHand","cards","cardsImages","map","key","height","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","deck","bind","assertThisInitialized","_this2","fetch","then","response","json","result","setState","DeckId","_this3","url","crib","_this4","hand","className","src_Crib","src_Hand","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.eb8b9b53.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Crib extends Component {\r\n  render() {\r\n        const { deck_id } = this.props;\r\n        const { getCib } = this.props\r\n        console.log('CRIB: props',this.props)\r\n        const code = this.props.card.code\r\n        const image = this.props.card.image\r\n        console.log('CRIB code', code)\r\n        console.log('CRIB image', image)\r\n\r\n        return (\r\n          <div>\r\n            <button onClick={() => this.props.getCrib({deck_id})}>Get Crib</button>\r\n            <p>This will become the card hands: {deck_id}</p>\r\n            <p>This the first card: {code}</p>\r\n            <img src={image} heigh='228px' width='162px'/ >\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Crib\r\n","import React, { Component } from 'react';\r\n\r\nclass Hand extends Component {\r\n  render() {\r\n        const { deck_id } = this.props;\r\n        const { getHand } = this.props\r\n        console.log('GETHAND Main1 props',this.props)\r\n        const cards = this.props.cards\r\n        console.log('GETHAND cards: ', cards)\r\n        // console.log('GETHAND Main2 props',this.props)\r\n        // const code = this.props.card.code\r\n          //const image = this.props.card.image\r\n        // console.log('GET HAND', code)\r\n        // console.log('GET HAND', image)\r\n\r\n        // console.log('APP checking stae.cards1 ', cards = this.state.hands\r\n        // <img src={image} height=\"228\" width=\"162\"/ >\r\n        // <img src={image} height=\"228\" width=\"162\"/ >\r\n        // <img src={image} height=\"228\" width=\"162\"/ >\r\n        const cardsImages = cards.map(card => {\r\n          return <img src={card.image} key={card.code} height=\"228\" width=\"162\"/>\r\n        })\r\n        console.log('22222222222222222222222 ', cardsImages)\r\n        return (\r\n          <div>\r\n          <button onClick={() => this.props.getHand({deck_id})}>Get Hand</button>\r\n          <p>This will become the card hands: {deck_id}</p>\r\n          <div>{cardsImages}</div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Hand\r\n","import React, { Component } from 'react';\r\nimport Crib from './Crib'\r\nimport Hand from './Hand'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.getCrib = this.getCrib.bind(this)\r\n      this.getHand = this.getHand.bind(this)\r\n    }\r\n\r\n    state = {\r\n    'deck': []\r\n}\r\n    componentDidMount() {\r\n        // const url = \"https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*&limit=1\";\r\n        console.log(\"Look at me. I mounted!!\")\r\n\r\n\r\n        // temporarily removed this to save bandwidth and resue the same deck\r\n        const url = 'https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1'\r\n        fetch(url)\r\n            .then(response =>\r\n              response.json()\r\n            )\r\n            .then(result => {\r\n                console.log('STATE1111', this.state)\r\n                console.log('BBBBBBB ', result)\r\n                this.setState({\r\n                    deck: result\r\n                })\r\n            })\r\n    }\r\n\r\n    getCrib(DeckId) {\r\n      console.log('I am getting crib card from the deck: ', DeckId.deck_id)\r\n      const url = 'https://deckofcardsapi.com/api/deck/' + DeckId.deck_id + '/draw/?count=1'\r\n      fetch(url)\r\n          .then(response =>\r\n              response.json()\r\n          )\r\n          .then(result => {\r\n            console.log('GET CRIB state', this.state)\r\n            console.log('GT CRIB result ', result)\r\n            //console.log('CCCCCCC ', this)\r\n            console.log('GET CRIB cards', result.cards[0])\r\n            this.setState({\r\n              crib: result.cards\r\n            })\r\n          });\r\n    }\r\n\r\n    getHand(DeckId) {\r\n      console.log('I am getting users hand from the deck: ', DeckId.deck_id)\r\n      const url = 'https://deckofcardsapi.com/api/deck/' + DeckId.deck_id + '/draw/?count=4'\r\n      fetch(url)\r\n          .then(response =>\r\n              response.json()\r\n          )\r\n          .then(result => {\r\n            console.log('GET HAND state', this.state)\r\n            console.log('GET HAND result ', result)\r\n            console.log('CCCCCCC ')\r\n            console.log('GET HAND cards1', result)\r\n            console.log('GET HAND cards2', result.cards)\r\n            this.setState({\r\n               hand: result.cards\r\n            })\r\n          });\r\n    }\r\n\r\n    render() {\r\n        console.log('RENDER: state', this.state)\r\n        const {deck_id} = this.state.deck;\r\n        const {deck} = this.state.deck\r\n\r\n        // const {card} = this.state.hand\r\n        let card\r\n        if (this.state.crib) {\r\n          card = this.state.crib[0]\r\n        } else {\r\n          card = {}\r\n        }\r\n\r\n        let cards\r\n        if (this.state.hand) {\r\n          console.log('APP checking state.cards1 ')\r\n          console.log('APP checking state ', this.state)\r\n          console.log('APP checking state.hand ', this.state.hand)\r\n          cards = this.state.hand\r\n        } else {\r\n          console.log('APP checking stae.cards2 ')\r\n          cards = []\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Cribbage Hand Tester</h1>\r\n                <p>Guess how many points this hand is worth.</p>\r\n                <Crib deck_id={deck_id} getCrib={this.getCrib} card={card}/>\r\n                <Hand deck_id={deck_id} getHand={this.getHand} cards={cards}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}