{"version":3,"sources":["components/Hand.js","cribbage.js","components/Results.js","forms/CustomHand.js","App.js","index.js"],"names":["Hand","props","cards","buttonText","cardsLeft","cardsImages","length","map","card","index","react_default","a","createElement","className","src","image","key","code","id","alt","onClick","getHand","sortHand","setShowCustomHand","proptypes","PropTypes","array","isReqired","string","number","patternsOfThree","patternsOfFour","convertToIntegers","value","isNaN","parseInt","twoSum","arr","target","arguments","undefined","result","i","j","push","findRun","hand","pattern","runFound","k","val","countOcurrences","c","count","getFifteenSums","sumPairs","cardHand","fifteenPairs","getFifteenPairs","sumTriplets","pairTarget","shift","fifteenTriplets","start","p","temp","getFifteenTriplets","sumQuartets","fifteenQuartets","sum","Object","toConsumableArray","splice","getFifteenQuartets","sumQuintet","fifteenQuartet","getFifteenQuintet","concat","getRuns","sortedCards","copyOfCards","sort","b","sortCards","runsResult","runOf5Found","runOf4Found","Results","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showResults","event","test","elem","document","getElementById","style","border","pairResult","sumsResult","flushResult","nibsResult","score","displayPairs","displaySums","displayRuns","displayFlush","displayNibs","_this2","pairResults","fullHand","totalScore","charArray","convertToChars","uniqueSet","Set","uniqueValues","finalResult","resultObj","resultLength","description","getPairs","copyOfHand","checkAllEqual","every","suit","allEqual","pop","getFlushes","communitySuit","getNibs","tallyTheScores","showResultsCheckbox","type","inline","checked","onChange","setState","display","onMouseOver","e","addHighlight","onMouseOut","removeHighlight","Component","object","CustomHand","handleChange","preventDefault","onCustomHandChange","name","showCardOptions","showSuitOptions","showCustomHand","onSubmit","App","codeMap","ACE","2","3","4","5","6","7","8","9","10","JACK","QUEEN","KING","valueMap","bind","assertThisInitialized","deck","customHand","console","log","fetch","then","response","json","deck_id","remaining","url","_this3","swal","cardA","cardB","comparison","sortedHand","compareCardValues","charAt","position","getCode","newCode","newImage","suitChar","newCard","objectSpread","slice","alreadyExists1","changeCard","alreadyExists2","changeSuit","Fragment","components_Hand","showCustomHandForm","forms_CustomHand","components_Results","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.45abe39b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n// Component Hand\r\nconst Hand = (props) => {\r\n  const cards = props.cards\r\n  const buttonText = props.buttonText\r\n  const cardsLeft = props.cardsLeft\r\n\r\n  let cardsImages = []\r\n\r\n  if (cards.length > 0) {\r\n    cardsImages = cards.map((card, index) => {\r\n      if (index !== 4) {\r\n        return <img className='card' src={card.image} key={card.code} id={card.code} alt={card.code} />\r\n      } else {\r\n        return <img className='c-card' src={card.image} key={card.code} id={card.code} alt={card.code} />\r\n      }\r\n    })\r\n  } else {\r\n    cardsImages =\r\n      <div className='cribbage-section'>\r\n        <img className='card' src='./card_back.jpg' alt='1' />\r\n        <img className='card' src='./card_back.jpg' alt='2' />\r\n        <img className='card' src='./card_back.jpg' alt='3' />\r\n        <img className='card' src='./card_back.jpg' alt='4' />\r\n        <img className='c-card' src='./card_back.jpg' alt='5' />\r\n      </div>\r\n\r\n  }\r\n  return (\r\n    <div className='cribbage-parent'>\r\n      <header className='cribbage-header'>\r\n        <button className='cribbage-button' onClick={() => props.getHand()}>{buttonText}</button>\r\n        <button className='cribbage-button' onClick={() => props.sortHand()}>Sort Cards</button>\r\n        <button className='cribbage-button' onClick={() => props.setShowCustomHand(true)}>Custom Hand</button>\r\n      </header>\r\n      <div>Cards remaining in deck: {cardsLeft}</div>\r\n      <section>\r\n        <div>{cardsImages}</div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nHand.proptypes = {\r\n  cards: PropTypes.array.isReqired,\r\n  buttonText: PropTypes.string.isReqired,\r\n  cardsLeft: PropTypes.number.isReqired\r\n}\r\n\r\nexport default Hand\r\n","\r\n// all 10 combinations that a run of three can have\r\nconst patternsOfThree = [\r\n  [0, 1, 2],  // First, second and third card\r\n  [0, 1, 3],  // First, second and fourth card\r\n  [1, 2, 3],  // Second, third and fourth card...\r\n  [0, 1, 4],\r\n  [0, 2, 4],\r\n  [1, 2, 4],\r\n  [0, 3, 4],\r\n  [1, 3, 4],\r\n  [2, 3, 4],\r\n  [0, 2, 3]\r\n]\r\n\r\n// all 4 combinations that a run of 4 can have\r\nconst patternsOfFour = [\r\n  [0, 1, 2, 3],\r\n  [0, 1, 2, 4],\r\n  [0, 1, 3, 4],\r\n  [0, 2, 3, 4],\r\n  [1, 2, 3, 4]\r\n]\r\n\r\n/**\r\n  * Converts each card to a simple integer\r\n  * ACE = 1, Facecards = 10\r\n  * @function convertToIntegers\r\n  * @param {Object[]} - Cards in the players hand\r\n  * @returns {number[]} - Array of numbers representing the cards\r\n  */\r\nfunction convertToIntegers(cards) {\r\n  var arrNoSuits = cards.map(card => card.value)\r\n  // change face cards and ace to numbers\r\n  var arrInteger = arrNoSuits.map(function(card) {\r\n    if (isNaN(card)) {\r\n      card = (card === 'ACE') ? 1 : 10\r\n    } else {\r\n      card = parseInt(card, 10)\r\n    }\r\n    return card\r\n  })\r\n  return arrInteger\r\n}\r\n\r\n/**\r\n  * Sorts the cards and adds 'val' property to represent the points value for each card.\r\n  * example: KING = 14, ACE = 1\r\n  * @function sortCards\r\n  *  @param {Object[]} - Cards in the players hand\r\n  *  @returns {Object[]} - Array of cards that are sorted and have numerica value added\r\n  */\r\nfunction sortCards(cards) {\r\n  let copyOfCards = [...cards]\r\n  for (let i = 0; i < cards.length; i++) {\r\n\r\n    switch (copyOfCards[i].value) {\r\n      case 'ACE':\r\n        copyOfCards[i].val = 1;\r\n        break;\r\n      case 'JACK':\r\n        copyOfCards[i].val = 11;\r\n        break;\r\n      case 'QUEEN':\r\n        copyOfCards[i].val = 12;\r\n        break;\r\n      case 'KING':\r\n        copyOfCards[i].val = 13\r\n        break;\r\n      default:\r\n        copyOfCards[i].val = parseInt(copyOfCards[i].value, 10);\r\n    }\r\n  }\r\n  copyOfCards.sort((a, b) => a.val - b.val)\r\n  return copyOfCards\r\n}\r\n\r\nexport function sumTwoNumbers(a, b) {\r\n  let sum = a + b\r\n  return sum\r\n}\r\n\r\n/**\r\n* Returns array of two number pairs of numbers that sum to the target value\r\n* @function twoSum\r\n* @param {number[]} - Array of integers\r\n* @param {number} - Target value that the pairs should sum to\r\n* @return {number[number[]]} Array of pairs of numbers where each number represents the poistion in the hand\r\n* @example [[1,2], [3,5], [4,5]]\r\n*/\r\nfunction twoSum(arr, target = 15) {\r\n  var result = [];\r\n  for (var i = 0; i < arr.length; i++) {\r\n    for (var j = i + 1; j < arr.length; j++) {\r\n      if (arr[i] + arr[j] === target) {\r\n        result.push([i, j]);\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n* Strips the card array down to a simple array of characters\r\n* @function convertToChars\r\n* @param {Object[]} - Cards in the players hand\r\n* @return {number[]} - Character value of each card\r\n* @example {'5', '4', 'ACE', 'KING', '7'}\r\n*/\r\nfunction convertToChars(cards) {\r\n  let charArray = []\r\n  cards.map(function(card) {\r\n    return charArray.push(card.value)\r\n  })\r\n  return charArray\r\n}\r\n\r\n// checks for a run in a given array of cards\r\n/**\r\n* Checks for a run in a given array of sorted cards\r\n* @function convertToChars\r\n* @param {Object[]} - Cards in the players hand\r\n* @param {number[]} - Pattern of cards to check\r\n* @return {bolean} - Run was found. True/False\r\n* @example {'5', '4', 'ACE', 'KING', '7'}\r\n*/\r\nfunction findRun(hand, pattern) {\r\n  let runFound = true\r\n  for (let k = 0; k < pattern.length - 1; k++) {\r\n    let result = hand[pattern[k + 1]].val - hand[pattern[k]].val\r\n    if (result === 1) {\r\n      continue\r\n    } else {\r\n      runFound = false\r\n    }\r\n  }\r\n  return runFound\r\n}\r\n// quick and dirty way to count occurences of a character in an array\r\nfunction countOcurrences(arr, c) {\r\n  let count = 0\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (arr[i] === c) {\r\n      count++\r\n    }\r\n  }\r\n  return count\r\n}\r\n\r\n// gets pairs, triplets and quartets of cards in a hand\r\nexport function getPairs(fullHand) {\r\n  // reduce the array to an array of chars\r\n  let charArray = convertToChars(fullHand)\r\n  // creating a set removes duplicates.\r\n  const uniqueSet = new Set(charArray)\r\n  // turn set back to array so that we have an\r\n  // array of unique values in the hand\r\n  const uniqueValues = [...uniqueSet]\r\n  let finalResult = []\r\n  // looping through 3 values - a, j and 3\r\n  for (let i = 0; i < uniqueValues.length; i++) {\r\n    let result = []\r\n    let occurences = countOcurrences(charArray, uniqueValues[i])\r\n    if (occurences > 1) {\r\n      // get index of each one\r\n      for (let k = 0; k < charArray.length; k++) {\r\n        if (uniqueValues[i] === charArray[k]) {\r\n          result.push(fullHand[k])\r\n        }\r\n      }\r\n      let resultObj = {}\r\n      resultObj.result = result\r\n      let resultLength = result.length\r\n      if (resultLength === 2) {\r\n        resultObj.description = 'Pair'\r\n        resultObj.score = 2\r\n      }\r\n      else if (resultLength === 3) {\r\n        resultObj.description = 'Three of a kind'\r\n        resultObj.score = 6\r\n      } else if (resultLength === 4) {\r\n        resultObj.description = 'Four of a kind'\r\n        resultObj.score = 12\r\n      }\r\n      finalResult.push(resultObj)\r\n    }\r\n  }\r\n  return finalResult\r\n}\r\n\r\nexport function getFifteenSums(cards) {\r\n  let totalSums = []\r\n  let sumPairs = getFifteenPairs(cards, 15)\r\n  let sumTriplets = getFifteenTriplets(cards, 15)\r\n  let sumQuartets = getFifteenQuartets(cards, 15)\r\n  let sumQuintet = getFifteenQuintet(cards, 15)\r\n\r\n  totalSums = [...sumPairs, ...sumTriplets, ...sumQuartets, ...sumQuintet]\r\n  return totalSums\r\n}\r\n\r\n\r\n/**\r\n * Returns sets of two cards that sum to the target value\r\n * @param {string[]} cardHand - Array of cards\r\n * @param {number} target - Target value that the 2 cards should sum to\r\n * @return {Array<Array<Cards>>} Array of cards representing cards that sum to the target value\r\n * @example\r\n * [['9h', '6d'], ['7s', '8h']\r\n *\r\n */\r\nfunction getFifteenPairs(cardHand, target = 15) {\r\n  // debugger\r\n  let hand = convertToIntegers(cardHand)\r\n  let result = twoSum(hand, target)\r\n  let fifteenPairs = []\r\n  for (var i = 0; i < result.length; i++) {\r\n    fifteenPairs.push([cardHand[result[i][0]], cardHand[result[i][1]]])\r\n  }\r\n  return fifteenPairs\r\n}\r\n\r\n/**\r\n * Returns sets of three cards that sum to the target value\r\n * @param {string[]} cardHand - Array of cards\r\n * @param {number} target - Target value that the 3 cards should sum to\r\n * @return {Array<Array<string>>} Array of triplets representing cards that sum to the target value\r\n * @example\r\n * [['9h', '4d', '2d'], ['7s', '7h', 'as']\r\n *\r\n */\r\nfunction getFifteenTriplets(cardHand, target = 15) {\r\n  let hand = convertToIntegers(cardHand)\r\n  let pairTarget = target - hand[0]\r\n  hand.shift()\r\n  let start = 0;\r\n  // let intermediateResult = []\r\n  let fifteenTriplets = []\r\n  for (let j = start + 1; j < hand.length + 2; j++) {\r\n    let result = twoSum(hand, pairTarget)\r\n    for (var p = 0; p < result.length; p++) {\r\n      let temp = [cardHand[j - 1]]\r\n      temp.push(cardHand[result[p][0] + j])\r\n      temp.push(cardHand[result[p][1] + j])\r\n      fifteenTriplets.push(temp)\r\n    }\r\n    pairTarget = target - hand[0]\r\n    hand.shift()\r\n  }\r\n  return fifteenTriplets\r\n}\r\n\r\n/**\r\n * Returns sets of four cards that sum to the target value\r\n * @param {string[]} cardHand - Array of cards\r\n * @param {number} target - Target value that the 4 cards should sum to\r\n * @return {Array<Array<string>>} Array of quartets representing cards that sum to the target value\r\n * @example\r\n * [['qh', '3d', 'ad', 'as'], ['4s', '3h', '5s', '3h']]\r\n *\r\n */\r\nfunction getFifteenQuartets(cardHand, target = 15) {\r\n  let fifteenQuartets = []\r\n  let hand = convertToIntegers(cardHand)\r\n  for (let i = 0; i < hand.length; i++) {\r\n    let sum = hand[0] + hand[1] + hand[2] + hand[3] + hand[4] - hand[i]\r\n    if (sum === target) {\r\n      let result = [...cardHand]\r\n      result.splice(i, 1)\r\n      fifteenQuartets.push(result)\r\n    }\r\n  }\r\n  return fifteenQuartets\r\n}\r\n/**\r\n * Returns sets of five cards that sum to the target value\r\n * @param {string[]} cardHand - Array of cardes\r\n * @param {number} target - Target value that the 5 cards should sum to\r\n * @return {Array<Array<string>>} Array of quintets representing cards that sum to the target value\r\n * @example\r\n * [['qh', '2d', 'ad', 'as', 'ah']]\r\n *\r\n */\r\nfunction getFifteenQuintet(cardHand, target = 15) {\r\n  let fifteenQuartet = []\r\n  let hand = convertToIntegers(cardHand)\r\n  let sum = hand[0] + hand[1] + hand[2] + hand[3] + hand[4]\r\n  if (sum === target) {\r\n    fifteenQuartet.push(cardHand)\r\n  }\r\n  return fifteenQuartet\r\n}\r\n\r\n/**\r\n * Returns sets of four or five cards that are the same suit\r\n * @param {string[]} cardHand - Array of cardes\r\n * @return {Array<Array<Card>>} Array of Cards representing a flush\r\n *\r\n */\r\nexport function getFlushes(cardHand) {\r\n  const copyOfHand = [...cardHand]\r\n  // check for five card flush (all suits are equal)\r\n  const checkAllEqual = arr => arr.every(card => card.suit === arr[0].suit)\r\n\r\n  let allEqual = checkAllEqual(copyOfHand)\r\n  if (allEqual) {\r\n    return copyOfHand\r\n  } else { // check for flush in forst four cards\r\n    copyOfHand.pop()\r\n    allEqual = checkAllEqual(copyOfHand)\r\n    if (allEqual) {\r\n      return copyOfHand\r\n    }\r\n  }\r\n  return []\r\n}\r\n\r\n// checks if the hand has a Jack that matches the suit of the community card\r\nexport function\r\n  getNibs(cards) {\r\n  let communitySuit = cards[4].suit\r\n  let result = []\r\n  for (let i = 0; i < cards.length - 1; i++) {\r\n    if (cards[i].value === 'JACK' && cards[i].suit === communitySuit) {\r\n      result.push(cards[i])\r\n      result.push(cards[4])\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n     * Returns sets of three, four or five cards that are sequential ie; a run\r\n     * @param {string[]} cardHand - Array of cardes\r\n     * @return {Array<Array<Card>>} Array of Cards representing a run\r\n     *\r\n     */\r\nexport function getRuns(cardHand) {\r\n  let sortedCards = sortCards(cardHand)\r\n  let runsResult = []\r\n\r\n  let runOf5Found = true\r\n\r\n  // start by looking for runs of 5\r\n  for (let i = 0; i < 4; i++) {\r\n    if (sortedCards[i + 1].val - sortedCards[i].val !== 1) {\r\n      runOf5Found = false\r\n      break\r\n    }\r\n  }\r\n\r\n  // now look for runs of 4 using the 5 possible combos of 4 runs if there were no runs of 5\r\n  let runOf4Found = false\r\n  if (!runOf5Found) {\r\n    for (let i = 0; i < patternsOfFour.length; i++) {\r\n      if (findRun(sortedCards, patternsOfFour[i])) {\r\n        runsResult.push([sortedCards[patternsOfFour[i][0]], sortedCards[patternsOfFour[i][1]], sortedCards[patternsOfFour[i][2]], sortedCards[patternsOfFour[i][3]]])\r\n        runOf4Found = true\r\n      }\r\n    }\r\n  }\r\n  // now look for runs of 3 using the the 9 possible combos of 3 runs if there were no runs of 4\r\n  if (!runOf4Found && !runOf5Found) {\r\n    for (let i = 0; i < patternsOfThree.length; i++) {\r\n      if (findRun(sortedCards, patternsOfThree[i])) {\r\n        runsResult.push([sortedCards[patternsOfThree[i][0]], sortedCards[patternsOfThree[i][1]], sortedCards[patternsOfThree[i][2]]])\r\n      }\r\n    }\r\n  }\r\n  return runOf5Found ? [sortedCards] : runsResult\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { getPairs, getFifteenSums, getFlushes, getNibs, getRuns } from '.././cribbage.js'\r\n\r\nclass Results extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showResults: true }\r\n    // this.personName = 'Fred'\r\n    // all 10 combinations that a run of three can have\r\n    this.patternsOfThree = [\r\n      [0, 1, 2],\r\n      [0, 1, 3],\r\n      [1, 2, 3],\r\n      [0, 1, 4],\r\n      [0, 2, 4],\r\n      [1, 2, 4],\r\n      [0, 3, 4],\r\n      [1, 3, 4],\r\n      [2, 3, 4],\r\n      [0, 2, 3]\r\n    ]\r\n  }\r\n\r\n  // highlight the cards in the hand\r\n  addHighlight(event, cards) {\r\n    let test\r\n    if (cards.result) {\r\n      test = cards.result\r\n    } else {\r\n      test = cards\r\n    }\r\n    for (var i = 0; i < test.length; i++) {\r\n      const elem = document.getElementById(test[i].code)\r\n      if (elem) {\r\n        elem.style.border = \"2px solid blue\"\r\n        elem.style['border-radius'] = '8px'\r\n      }\r\n    }\r\n  }\r\n  removeHighlight(event, cards) {\r\n    let test\r\n    if (cards.result) {\r\n      test = cards.result\r\n    } else {\r\n      test = cards\r\n    }\r\n    for (var i = 0; i < test.length; i++) {\r\n      const elem = document.getElementById(test[i].code)\r\n      if (elem) {\r\n        elem.style.border = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  // tallyTheScores(pairResult, fullSumsResult, runsResult, nibsResult) {\r\n  tallyTheScores(pairResult, sumsResult, runsResult, flushResult, nibsResult) {\r\n    let score = 0\r\n    for (let i = 0; i < pairResult.length; i++) {\r\n      score = score + pairResult[i].score\r\n    }\r\n    for (let i = 0; i < sumsResult.length; i++) {\r\n      score = score + 2\r\n    }\r\n    for (let i = 0; i < runsResult.length; i++) {\r\n      score = score + runsResult[i].length\r\n    }\r\n    if (flushResult.length > 0) {\r\n      score = score + flushResult.length\r\n    }\r\n    if (nibsResult.length > 0) {\r\n      score = score + 1\r\n    }\r\n    return score\r\n  }\r\n\r\n  render() {\r\n    let pairResults = []\r\n    const { cards } = this.props\r\n\r\n    let displayPairs, displaySums, displayRuns, displayFlush, displayNibs\r\n    let showResults = this.state.showResults\r\n    let sumsResult, flushResult, runsResult, nibsResult\r\n    let fullHand = [...cards]\r\n    let totalScore = 0\r\n\r\n    if (fullHand.length === 5) {\r\n      sumsResult = getFifteenSums(fullHand)\r\n      // console.log('******  S U M   R E S U L T S')\r\n      // console.log(sumsResult)\r\n\r\n      runsResult = getRuns(fullHand)\r\n      // console.log('******  R U N S  R E S U L T S')\r\n      // console.log('======> runsResult ', runsResult)\r\n      // console.log(runsResult)\r\n\r\n      pairResults = getPairs(fullHand)\r\n      // console.log('****** P A I R   R E S U L T S')\r\n      // console.log(pairResults)\r\n\r\n      flushResult = getFlushes(fullHand)\r\n      // console.log('****** F L U S H   R E S U L T S')\r\n      // console.log(flushResult)\r\n\r\n      nibsResult = getNibs(cards)\r\n      // console.log('******  N I B S   R E S U L T S')\r\n      // console.log('======> nibsResult ', nibsResult)\r\n      // console.log(nibsResult)\r\n\r\n      // add all the results of the sums\r\n      totalScore = this.tallyTheScores(pairResults, sumsResult, runsResult, flushResult, nibsResult)\r\n\r\n    }\r\n\r\n    const showResultsCheckbox = <div className='show-results'>\r\n      <input type='checkbox' inline='true' checked={showResults} onChange={() => { this.setState({ showResults: !showResults }) }} />\r\n      <div>Show results</div>\r\n    </div>\r\n\r\n    // Only show results if the full hand has been dealt\r\n    if (fullHand.length === 5) {\r\n      displayPairs = <div>{pairResults.map(result =>\r\n        <div style={{ display: (showResults ? 'block' : 'none') }}>\r\n          <section className='cribbage-results' onMouseOver={(e) => this.addHighlight(e, result)} onMouseOut={(e) => this.removeHighlight(e, result)}>\r\n            <div className='card-result'>{result.result.map(card =>\r\n              <img className='result-card' src={card.image} key={card.code} alt={card.code} />\r\n            )}\r\n            </div>\r\n            <div className='cribbage-points'><span>{result.description} - Points: {result.score}</span></div>\r\n          </section>\r\n\r\n        </div>\r\n      )}</div>\r\n\r\n      displaySums = <div>{sumsResult.map(result =>\r\n        <div style={{ display: (showResults ? 'block' : 'none') }}>\r\n          <section className='cribbage-results' onMouseOver={(e) => this.addHighlight(e, result)} onMouseOut={(e) => this.removeHighlight(e, result)}>\r\n            <div className='card-result'>{result.map(card =>\r\n              <img className='result-card' src={card.image} key={card.code} alt={card.code} />\r\n            )}\r\n            </div>\r\n            <div className='cribbage-points'><span>Sum to 15 - Points: 2</span></div>\r\n          </section>\r\n        </div>\r\n      )}</div>\r\n\r\n      displayRuns = <div>{runsResult.map(result =>\r\n        <div style={{ display: (showResults ? 'block' : 'none') }}>\r\n          <section className='cribbage-results' onMouseOver={(e) => this.addHighlight(e, result)} onMouseOut={(e) => this.removeHighlight(e, result)}>\r\n            <div className='card-result'>{result.map(card =>\r\n              <img className='result-card' src={card.image} key={card.code} alt={card.code} />\r\n            )}\r\n            </div>\r\n            <div className='cribbage-points'><span>Run - Points: {result.length}</span></div>\r\n          </section>\r\n        </div>\r\n      )}</div>\r\n\r\n      if (nibsResult.length > 0) {\r\n        displayNibs = <div style={{ display: (showResults ? 'block' : 'none') }}>\r\n          <section className='cribbage-results' onMouseOver={(e) => this.addHighlight(e, nibsResult)} onMouseOut={(e) => this.removeHighlight(e, nibsResult)}>\r\n            <div className='card-result'>{nibsResult.map(card =>\r\n              <img className='result-card' src={card.image} key={card.code} alt={card.code} />\r\n            )}\r\n            </div>\r\n            <div className='cribbage-points'><span>Nibs - Points: 1</span></div>\r\n          </section>\r\n        </div>\r\n      }\r\n      if (flushResult.length > 0) {\r\n        displayFlush = <div style={{ display: (showResults ? 'block' : 'none') }}>\r\n          <section className='cribbage-results' onMouseOver={(e) => this.addHighlight(e, flushResult)} onMouseOut={(e) => this.removeHighlight(e, flushResult)}>\r\n            <div className='card-result'>{flushResult.map(card =>\r\n              <img className='result-card' src={card.image} key={card.code} alt={card.code} />\r\n            )}\r\n            </div>\r\n            <div className='cribbage-points'><span>Flush - Points: {flushResult.length}</span></div>\r\n          </section>\r\n        </div>\r\n      } else {\r\n        displayFlush = <div />\r\n      }\r\n    }\r\n\r\n    if (fullHand.length === 5) {\r\n      return <div>\r\n        <div>{showResultsCheckbox}</div>\r\n        <div style={{ display: (showResults ? 'block' : 'none') }}>\r\n          <h3 className='cribbage-text'>Score = {totalScore}</h3>\r\n        </div>\r\n        {displaySums}\r\n        {displayRuns}\r\n        {displayPairs}\r\n        {displayFlush}\r\n        {displayNibs}\r\n      </div>\r\n    } else {\r\n      return (\r\n        <div>\r\n          {showResultsCheckbox}\r\n          <div>Nothing to display</div>\r\n        </div>\r\n\r\n      )\r\n    }\r\n\r\n  }\r\n}\r\n\r\nResults.proptypes = {\r\n  cards: PropTypes.array.isReqired,\r\n  card: PropTypes.object.isReqired\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\nimport '.././index.css'\r\n\r\n// Component Hand\r\nconst CustomHand = (props) => {\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    props.setShowCustomHand(false)\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    event.preventDefault()\r\n    props.onCustomHandChange(event.target.name, event.target.value)\r\n  }\r\n\r\n  const showCardOptions = (name, value) => {\r\n    return (\r\n      <div className='the-cards' onChange={handleChange}>\r\n        <select className='custom-select' value={value} name={name}>\r\n          <option value='ACE'>Ace</option>\r\n          <option value='2'>Two</option>\r\n          <option value='3'>Three</option>\r\n          <option value='4'>Four</option>\r\n          <option value='5'>Five</option>\r\n          <option value='6'>Six</option>\r\n          <option value='7'>Seven</option>\r\n          <option value='8'>Eight</option>\r\n          <option value='9'>Nine</option>\r\n          <option value='10'>Ten</option>\r\n          <option value='JACK'>Jack</option>\r\n          <option value='QUEEN'>Queen</option>\r\n          <option value='KING'>King</option>\r\n        </select>\r\n      </div>\r\n    )\r\n  }\r\n  const showSuitOptions = (name, suit = 'SPADES') => {\r\n    return (\r\n      <div className='the-suits' onChange={handleChange} >\r\n        <select className='custom-select' value={suit} name={name}>\r\n          <option value='HEARTS'>Hearts</option>\r\n          <option value='DIAMONDS'>Diamonds</option>\r\n          <option value='SPADES'>Spades</option>\r\n          <option value='CLUBS'>Clubs</option>\r\n        </select>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const showCustomHand = props.showCustomHand\r\n  // let length\r\n  // if (props.cards) {\r\n  //   length = props.cards.length\r\n  // }\r\n\r\n  if (showCustomHand && props.cards.length > 3) {\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div id='cardOptions'>\r\n          <div className='card-option'>\r\n            {showCardOptions('card1', props.cards[0].value)}\r\n            {showSuitOptions('suit1', props.cards[0].suit)}\r\n          </div>\r\n          <div className='card-option'>\r\n            {showCardOptions('card2', props.cards[1].value)}\r\n            {showSuitOptions('suit2', props.cards[1].suit)}\r\n          </div>\r\n          <div className='card-option'>\r\n            {showCardOptions('card3', props.cards[2].value)}\r\n            {showSuitOptions('suit3', props.cards[2].suit)}\r\n          </div>\r\n          <div className='card-option'>\r\n            {showCardOptions('card4', props.cards[3].value)}\r\n            {showSuitOptions('suit4', props.cards[3].suit)}\r\n          </div>\r\n          <div className='c-card-option'>\r\n            {showCardOptions('card5', props.cards[4].value)}\r\n            {showSuitOptions('suit5', props.cards[4].suit)}\r\n          </div>\r\n        </div>\r\n        <button className='cribbage-button' type='submit' value='Hello'>Hide</button>\r\n      </form>\r\n    )\r\n  } else {\r\n    return (null)\r\n  }\r\n}\r\nexport default CustomHand\r\n","import React, { Component } from 'react'\r\nimport swal from 'sweetalert'\r\nimport Hand from './components/Hand'\r\nimport Results from './components/Results'\r\nimport CustomHand from './forms/CustomHand'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    //    this.turnOverCard = this.turnOverCard.bind(this)\r\n    this.getHand = this.getHand.bind(this)\r\n    this.sortHand = this.sortHand.bind(this)\r\n    this.setShowCustomHand = this.setShowCustomHand.bind(this)\r\n    this.onCustomHandChange = this.onCustomHandChange.bind(this)\r\n    // this.state = {}\r\n    this.state = {\r\n      'deck': [],\r\n      'hand': [],\r\n      'customHand': [],\r\n      'cardsLeft': 52,\r\n      'showCustomHand': false\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('XXXXXXXXXXXXX App is unmounting')\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('XXXXXXXXXXXXX App is mounting: ', this.state)\r\n    const url = 'https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1'\r\n    fetch(url)\r\n      .then(response =>\r\n        response.json()\r\n      )\r\n      .then(result => {\r\n        this.setState({\r\n          deck_id: result.deck_id,\r\n          cardsLeft: result.remaining\r\n        })\r\n      })\r\n  }\r\n\r\n  codeMap = {\r\n    ACE: 'A',\r\n    2: 2,\r\n    3: 3,\r\n    4: 4,\r\n    5: 5,\r\n    6: 6,\r\n    7: 7,\r\n    8: 8,\r\n    9: 9,\r\n    10: 0,\r\n    JACK: 'J',\r\n    QUEEN: 'Q',\r\n    KING: 'K'\r\n  }\r\n\r\n  valueMap = {\r\n    ACE: 'A',\r\n    2: 2,\r\n    3: 3,\r\n    4: 4,\r\n    5: 5,\r\n    6: 6,\r\n    7: 7,\r\n    8: 8,\r\n    9: 9,\r\n    10: 10,\r\n    JACK: 11,\r\n    QUEEN: 12,\r\n    KING: 13\r\n  }\r\n\r\n  // // fake results of a pair\r\n  getHandTemp() {\r\n    const results = [\r\n      { value: '4', code: '4c', image: 'https://deckofcardsapi.com/static/img/4C.png', suit: 'CLUBS' },\r\n      { value: '2', code: '2c', image: 'https://deckofcardsapi.com/static/img/2C.png', suit: 'CLUBS' },\r\n      { value: '5', code: '5c', image: 'https://deckofcardsapi.com/static/img/5C.png', suit: 'CLUBS' },\r\n      { value: '3', code: '3c', image: 'https://deckofcardsapi.com/static/img/3C.png', suit: 'CLUBS' },\r\n      { value: '7', code: '7c', image: 'https://deckofcardsapi.com/static/img/7C.png', suit: 'CLUBS' },\r\n    ]\r\n    this.setState({\r\n      hand: results\r\n    })\r\n  }\r\n\r\n  /*\r\n   * [cards]\r\n   * card.code        eg. JS, AD, 9H\r\n   * card.image       eg.\r\n   * card.cardsImages\r\n   * card. suits      eg. SPADES, DIAMONDS, HEARTS\r\n   * card.value       eg. JACK, ACE, 9\r\n   * card.code        eg.\r\n   *\r\n   *\r\n   *\r\n   */\r\n  getHand() {\r\n    // make sure there are enough cards left in the deck\r\n    let url\r\n    if (this.state.cardsLeft < 5) {\r\n      swal('New deck', 'There are not enough cards left in the deck. Now using new deck', 'info')\r\n      url = 'https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1'\r\n      fetch(url)\r\n        .then(response =>\r\n          response.json()\r\n        )\r\n        .then(result => {\r\n          this.setState({\r\n            deck_id: result.deck_id,\r\n            cardsLeft: result.remaining\r\n          })\r\n          url = 'https://deckofcardsapi.com/api/deck/' + result.deck_id + '/draw/?count=5'\r\n        })\r\n        .then(() => {\r\n          fetch(url)\r\n            .then(response =>\r\n              response.json()\r\n            )\r\n            .then(result => {\r\n              this.setState({\r\n                hand: result.cards,\r\n                cardsLeft: result.remaining\r\n              })\r\n            })\r\n        })\r\n    } else {\r\n      url = 'https://deckofcardsapi.com/api/deck/' + this.state.deck_id + '/draw/?count=5'\r\n      fetch(url)\r\n        .then(response =>\r\n          response.json()\r\n        )\r\n        .then(result => {\r\n          this.setState({\r\n            hand: result.cards,\r\n            cardsLeft: result.remaining\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  compareCardValues(cardA, cardB) {\r\n    let comparison = 0\r\n    if (cardA.val > cardB.val) {\r\n      comparison = 1\r\n    } else if (cardA.val < cardB.val) {\r\n      comparison = -1\r\n    }\r\n    return comparison\r\n  }\r\n\r\n  sortHand() {\r\n    let sortedHand = [...this.state.hand]\r\n    sortedHand.sort(this.compareCardValues)\r\n    this.setState({\r\n      hand: sortedHand\r\n    })\r\n  }\r\n\r\n  setShowCustomHand(value) {\r\n    this.setState({\r\n      showCustomHand: value\r\n    })\r\n  }\r\n\r\n  showCustomHandForm() {\r\n    console.log('Showing custom hand form. ', this.props)\r\n  }\r\n\r\n  getCode(value, suit) {\r\n    return `${this.codeMap[value]}${suit.charAt(0)}`\r\n  }\r\n\r\n  alreadyExists1(position, value) {\r\n    console.log('alreadyExists - position: ', position)\r\n    console.log('alreadyExists - value: ', value)\r\n    console.log('code map stuff: ', this.codeMap[value])\r\n\r\n    //let's get the suit\r\n    const suit = this.state.hand[position].suit\r\n    let code = this.getCode(value, suit)\r\n\r\n    for (let i = 0; i < this.state.hand.length; i++) {\r\n      console.log('Comparing... ', this.state.hand[i].code, ' to ', code)\r\n      if (this.state.hand[i].code === code) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  alreadyExists2(position, suit) {\r\n    console.log('alreadyExists - position: ', position)\r\n    console.log('alreadyExists - value: ', suit)\r\n\r\n    // let's get the code\r\n    const code = `${this.state.hand[position].code.charAt(0)}${suit.charAt(0)}`\r\n    console.log('new code : ', code)\r\n\r\n    for (let i = 0; i < this.state.hand.length; i++) {\r\n      console.log('Comparing... ', this.state.hand[i].code, ' to ', code)\r\n      if (this.state.hand[i].code === code) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  changeCard(card, value) {\r\n    console.log('changeCard - value: ', value)\r\n    console.log('code map stuff: ', this.codeMap[value])\r\n    card.value = value\r\n\r\n\r\n    // change first letter of code to firts letter of suit\r\n    let cardChar = this.codeMap[value]\r\n    // console.log('suitChar: ', suitChar)\r\n    let newCode = cardChar + card.code.charAt(1)\r\n    // //newCode[1] = suitChar\r\n    card.code = newCode\r\n    let newImage = `https://deckofcardsapi.com/static/img/${newCode}.png`\r\n    card.image = newImage\r\n    //\r\n    // console.log('New card: ', card)\r\n    return card\r\n  }\r\n\r\n  changeSuit(card, value) {\r\n    console.log('changeSuit - value: ', value)\r\n    card.suit = value\r\n\r\n    // change last letter of code to firts letter of suit\r\n    let suitChar = value.charAt(0)\r\n    console.log('suitChar: ', suitChar)\r\n    let newCode = card.code.charAt(0) + suitChar\r\n    //newCode[1] = suitChar\r\n    card.code = newCode\r\n    let newImage = `https://deckofcardsapi.com/static/img/${newCode}.png`\r\n    card.image = newImage\r\n\r\n    console.log('New card: ', card)\r\n    return card\r\n  }\r\n\r\n  onCustomHandChange(name, value) {\r\n    let position = name.charAt(name.length - 1) - 1\r\n    // if name begins with 'suit'...\r\n    console.log('Custom hand has changed. The name is: ', name)\r\n    console.log('Custom hand has changed. The value is: ', value)\r\n    console.log('Custom hand has changed. The position is: ', position)\r\n\r\n    // determine if this already exists in the hand\r\n    // console.log('Already exists result: ', this.alreadyExists(position, value))\r\n\r\n    let hand = this.state.hand\r\n    let card = { ...hand[position] }\r\n    let newCard\r\n    if (name.slice(0, 4) === 'card') {\r\n      console.log('Dealing with the card change')\r\n      if (!this.alreadyExists1(position, value)) {\r\n        console.log('Making the change...')\r\n        newCard = this.changeCard(card, value)\r\n        hand[position] = newCard\r\n        this.setState({ hand })\r\n      } else {\r\n        swal('Oops!', 'You cannot have two identical cards in a hand.', 'warning')\r\n        console.log('NOT making the change...')\r\n      }\r\n      //newCard = this.changeCard(card, value)\r\n    } else if (name.slice(0, 4) === 'suit') {\r\n      console.log('Dealing with a suit change')\r\n      if (!this.alreadyExists2(position, value)) {\r\n        newCard = this.changeSuit(card, value)\r\n        hand[position] = newCard\r\n        this.setState({ hand })\r\n      } else {\r\n        swal('Oops', 'You cannot have two identical cards in a hand.', 'warning')\r\n        console.log('NOT making the change...')\r\n      }\r\n      //newCard = this.changeSuit(card, value)\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const cardsLeft = this.state.cardsLeft\r\n    const showCustomHand = this.state.showCustomHand\r\n    const setShowCustomHand = this.setShowCustomHand\r\n    const onCustomHandChange = this.onCustomHandChange\r\n\r\n    let cards\r\n    if (this.state.hand) {\r\n      cards = this.state.hand\r\n    } else {\r\n      cards = []\r\n    }\r\n\r\n    let buttonText = ''\r\n    if (cardsLeft === 52) {\r\n      buttonText = 'Reveal Cards'\r\n    } else {\r\n      buttonText = 'Get new cards'\r\n    }\r\n    return (\r\n      <div className='container'>\r\n        <h1 className='cribbage-text'>Cribbage Hand Tester</h1>\r\n        <p>Guess how many points this hand is worth.</p>\r\n\r\n        <div className='result-row'>\r\n          <React.Fragment>\r\n            <Hand getHand={this.getHand} sortHand={this.sortHand} showCustomHand={this.showCustomHandForm} setShowCustomHand={setShowCustomHand} cardsLeft={cardsLeft} cards={cards} buttonText={buttonText} />\r\n          </React.Fragment>\r\n        </div>\r\n        <div id='customHand'>\r\n          <CustomHand cards={cards} showCustomHand={showCustomHand} setShowCustomHand={setShowCustomHand} onCustomHandChange={onCustomHandChange} />\r\n        </div>\r\n        <Results cards={cards} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './index.css';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}